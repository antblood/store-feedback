// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package db

import (
	"context"
)

const GetAllFeedbacks = `-- name: GetAllFeedbacks :many
select id, message, created_at from feedback
`

func (q *Queries) GetAllFeedbacks(ctx context.Context) ([]Feedback, error) {
	rows, err := q.db.Query(ctx, GetAllFeedbacks)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Feedback
	for rows.Next() {
		var i Feedback
		if err := rows.Scan(&i.ID, &i.Message, &i.CreatedAt); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const InsertFeedback = `-- name: InsertFeedback :one
insert into feedback
(message) values ($1) returning id, message, created_at
`

func (q *Queries) InsertFeedback(ctx context.Context, message string) (Feedback, error) {
	row := q.db.QueryRow(ctx, InsertFeedback, message)
	var i Feedback
	err := row.Scan(&i.ID, &i.Message, &i.CreatedAt)
	return i, err
}
